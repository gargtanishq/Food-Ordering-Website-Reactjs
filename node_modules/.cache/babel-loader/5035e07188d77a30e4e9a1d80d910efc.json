{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Food Ordering Website Reactjs\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport react, { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmiting(true);\n    const response = await fetch(\"https://food-ordering-app-7cf09-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmiting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  const isSubmitingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 35\n  }, this);\n\n  const didSubmitModalContent =\n  /*#__PURE__*/\n  // <react.Fragment>\n  _jsxDEV(\"p\", {\n    children: \"Successfully sent the order!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this) // {/* <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n  // Close\n  // </button> */}\n  // </react.Fragment>\n  ;\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: [!isSubmiting && !didSubmit && cartModalContent, isSubmiting && isSubmitingModalContent, !isSubmiting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Cart, \"nkPkIdZUATqH5m8KkEjNuuHI3U8=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/Work/Food Ordering Website Reactjs/src/components/Cart/Cart.js"],"names":["react","useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","cartCtx","isCheckout","setIsCheckout","isSubmiting","setIsSubmiting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","response","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","modalActions","actions","onClose","button","isSubmitingModalContent","didSubmitModalContent","cartModalContent"],"mappings":"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","sourcesContent":["import react, { useContext, useState } from \"react\";\r\n\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmiting, setIsSubmiting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmiting(true);\r\n    const response = await fetch(\r\n      \"https://food-ordering-app-7cf09-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ user: userData, orderedItems: cartCtx.items }),\r\n      }\r\n    );\r\n    setIsSubmiting(false);\r\n    setDidSubmit(true);\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const isSubmitingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    // <react.Fragment>\r\n      <p>Successfully sent the order!</p>\r\n      // {/* <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        // Close\r\n      // </button> */}\r\n    // </react.Fragment>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <react.Fragment>\r\n      {!isSubmiting && !didSubmit && cartModalContent}\r\n      {isSubmiting && isSubmitingModalContent}\r\n      {!isSubmiting && didSubmit && didSubmitModalContent}\r\n    </react.Fragment>\r\n  );\r\n\r\n  return <Modal onClose={props.onClose}></Modal>;\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}